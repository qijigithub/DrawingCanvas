{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","color","strokeSize","changeColorAndSize","data","width","window","addEventListener","canvas","document","querySelector","ctx","getContext","height","innerHeight","innerWidth","painting","startPosition","e","draw","endPosition","beginPath","preventDefault","lineWidth","lineCap","type","lineTo","touches","clientX","clientY","stroke","strokeStyle","moveTo","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6KA6FeA,EA1FG,WAGhB,IAAIC,EACAC,EAEJ,SAASC,EAAmBC,EAAMC,GAChCJ,EAAQG,EACRF,EAAaG,EA8Df,OA5DAC,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMC,EAASC,SAASC,cAAc,WAChCC,EAAMH,EAAOI,WAAW,MAG9BJ,EAAOK,OAASP,OAAOQ,YACvBN,EAAOH,MAAQC,OAAOS,WAGtB,IAAIC,GAAW,EAGf,SAASC,EAAcC,GACrBF,GAAW,EACXG,EAAKD,GAGP,SAASE,IACPJ,GAAW,EACXL,EAAIU,YAGN,SAASF,EAAKD,GACPF,IAILE,EAAEI,iBACFX,EAAIY,UAAYrB,EAChBS,EAAIa,QAAU,QAGA,aAAVN,EAAEO,KACJd,EAAIe,OAAOR,EAAES,QAAQ,GAAGC,QAASV,EAAES,QAAQ,GAAGE,SAC3B,aAAVX,EAAEO,MACXd,EAAIe,OAAOR,EAAEU,QAASV,EAAEW,SAG1BlB,EAAImB,SACJnB,EAAIoB,YAAc9B,EACnBU,EAAIY,UAAYrB,EACfS,EAAIU,YAGU,aAAVH,EAAEO,KACJd,EAAIqB,OAAOd,EAAES,QAAQ,GAAGC,QAASV,EAAES,QAAQ,GAAGE,SAC3B,aAAVX,EAAEO,MACXd,EAAIqB,OAAOd,EAAEU,QAASV,EAAEW,UAK5BrB,EAAOD,iBAAiB,YAAaU,GACrCT,EAAOD,iBAAiB,aAAcU,GACtCT,EAAOD,iBAAiB,UAAWa,GACnCZ,EAAOD,iBAAiB,WAAYa,GACpCZ,EAAOD,iBAAiB,YAAaY,GACrCX,EAAOD,iBAAiB,YAAaY,MAIrC,sBAAKc,UAAU,MAAf,UAEI,sBAAKC,GAAG,iBAAR,UACJ,qBAAKA,GAAG,cAAcD,UAAU,QAAQE,QAAS,kBAAIhC,EAAmB,QAAQ,MAChF,qBAAK+B,GAAG,cAAcD,UAAU,MAAME,QAAS,kBAAIhC,EAAmB,MAAM,MAC5E,qBAAK+B,GAAG,cAAcD,UAAU,QAAQE,QAAS,kBAAIhC,EAAmB,QAAQ,MAChF,qBAAK+B,GAAG,cAAcD,UAAU,OAAOE,QAAS,kBAAIhC,EAAmB,OAAO,MAC9E,qBAAK+B,GAAG,cAAcD,UAAU,SAASE,QAAS,kBAAIhC,EAAmB,SAAS,MAClF,qBAAK+B,GAAG,cAAcD,UAAU,SAASE,QAAS,kBAAIhC,EAAmB,SAAS,MAClF,qBAAK+B,GAAG,cAAcD,UAAU,OAAOE,QAAS,kBAAIhC,EAAmB,OAAO,MAC9E,qBAAK+B,GAAG,eAAeC,QAAS,kBAAIhC,EAAmB,QAAQ,WAGjE,wBAAQ+B,GAAG,eC3EEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BZ,K","file":"static/js/main.c64084ec.chunk.js","sourcesContent":["\nimport React ,{useState,useEffect,useRef} from 'react';\nimport './App.css';\nexport const App= ()=>{\n\n\n  let color;\n  let strokeSize;\n  \n  function changeColorAndSize(data, width) {\n    color = data;\n    strokeSize = width;\n  }\n  window.addEventListener(\"load\", () => {\n    const canvas = document.querySelector(\"#canvas\");\n    const ctx = canvas.getContext(\"2d\");\n  \n    //resizing\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n  \n    //variables\n    let painting = false;\n  \n    //functions\n    function startPosition(e) {\n      painting = true;\n      draw(e);\n    }\n  \n    function endPosition() {\n      painting = false;\n      ctx.beginPath();\n    }\n  \n    function draw(e) {\n      if (!painting) {\n        return;\n      }\n      \n      e.preventDefault();\n      ctx.lineWidth = strokeSize;\n      ctx.lineCap = \"round\";\n   \n      // ctx.lineTo(e.clientX, e.clientY);\n      if (e.type == 'touchmove'){\n        ctx.lineTo(e.touches[0].clientX, e.touches[0].clientY);\n      } else if (e.type == 'mousemove'){\n        ctx.lineTo(e.clientX, e.clientY);\n      }\n        \n      ctx.stroke();\n      ctx.strokeStyle = color;\n     ctx.lineWidth = strokeSize;\n      ctx.beginPath();\n      \n      // ctx.moveTo(e.clientX, e.clientY);\n      if (e.type == 'touchmove'){\n        ctx.moveTo(e.touches[0].clientX, e.touches[0].clientY);\n      } else if (e.type == 'mousemove'){\n        ctx.moveTo(e.clientX, e.clientY);\n      }\n    }\n  \n    //event listeners\n    canvas.addEventListener(\"mousedown\", startPosition);\n    canvas.addEventListener(\"touchstart\", startPosition);\n    canvas.addEventListener(\"mouseup\", endPosition);\n    canvas.addEventListener(\"touchend\", endPosition);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"touchmove\", draw);\n  });\n\n  return (\n    <div className=\"App\">\n\n        <div id=\"colorButtonBox\">\n    <div id=\"colorButton\" className=\"black\" onClick={()=>changeColorAndSize('black',5)}></div>\n    <div id=\"colorButton\" className=\"red\" onClick={()=>changeColorAndSize('red',5)}></div>\n    <div id=\"colorButton\" className=\"green\" onClick={()=>changeColorAndSize('green',5)}></div>\n    <div id=\"colorButton\" className=\"blue\" onClick={()=>changeColorAndSize('blue',5)}></div>\n    <div id=\"colorButton\" className=\"yellow\" onClick={()=>changeColorAndSize('yellow',5)}></div>\n    <div id=\"colorButton\" className=\"purple\" onClick={()=>changeColorAndSize('purple',5)}></div>\n    <div id=\"colorButton\" className=\"grey\" onClick={()=>changeColorAndSize('grey',5)}></div>\n    <div id=\"eraserButton\" onClick={()=>changeColorAndSize('white',100)}></div>\n  </div>\n  \n  <canvas id=\"canvas\"></canvas>\n    </div>\n  );\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}